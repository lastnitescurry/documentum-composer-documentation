<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ie.lastnitescurry.documentum-composer-documentation</groupId>
	<artifactId>HelloWorld</artifactId>
	<packaging>jar</packaging>
	<version>7.3</version>

	<description>Example Composer Project</description>

	<parent>
		<groupId>ie.lastnitescurry</groupId>
		<artifactId>documentum-composer-documentation</artifactId>
		<version>7.3</version>
	</parent>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<inherited>false</inherited>
				<executions>
					<execution>
						<id>composer.documentation.markdown</id>
						<phase>compile</phase>
						<configuration>
							<target>
								<xslt basedir="${basedir}/Artifacts" destdir="${basedir}/src/site/markdown"
									style="${basedir}/src/xslt/types_to_markdown.xsl">
									<mapper type="glob" from="*.type" to="*.md" />
								</xslt>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>composer.documentation.graphviz</id>
						<phase>compile</phase>
						<configuration>
							<target>
								<property name="dot.file"
									value="${project.build.directory}/dar/default.dardef.dot" />
								<property name="png.file"
									value="${project.build.directory}/dar/default.dardef.png" />
								<property name="map.file"
									value="${project.build.directory}/dar/default.dardef.map" />
								<property name="svg.file"
									value="${project.build.directory}/dar/default.dardef.svg" />
								<property name="pdf.file"
									value="${project.build.directory}/dar/default.dardef.pdf" />

								<mkdir dir="${project.build.directory}/dar" />
								<xslt in="${basedir}/dar/default.dardef" out="${dot.file}"
									style="${basedir}/src/xslt/type2dot.xsl">
									<param name="artifacts.dir" expression="${basedir}/Artifacts" />
									<param name="site.url" expression="http://github.com/lastnitescurry/documentum-composer-documentation/tree/master/HelloWorld/src/site/markdown/Types" />
									<param name="site.docs.url" expression="http://github.com/lastnitescurry/documentum-composer-documentation/blob/master/HelloWorld/src/site/markdown/Types" />
									<param name="site.docs.ext" expression=".md" />
								</xslt>
								<!-- STEP 3: generate the PNG file ("build.png" or something similar) -->
								<exec executable="dot.exe" dir="${project.build.directory}/dar">
									<arg value="-Tpng" />
									<arg value="${dot.file}" />
									<arg value="-o" />
									<arg value="${png.file}" />
								</exec>
								<exec executable="dot.exe" dir="${project.build.directory}/dar">
									<arg value="-Timap" />
									<arg value="${dot.file}" />
									<arg value="-o" />
									<arg value="${map.file}" />
								</exec>
								<exec executable="dot.exe" dir="${project.build.directory}/dar">
									<arg value="-Tsvg" />
									<arg value="${dot.file}" />
									<arg value="-o" />
									<arg value="${svg.file}" />
								</exec>
								<exec executable="dot.exe" dir="${project.build.directory}/dar">
									<arg value="-Tpdf" />
									<arg value="${dot.file}" />
									<arg value="-o" />
									<arg value="${pdf.file}" />
								</exec>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>